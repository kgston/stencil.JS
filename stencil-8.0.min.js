var stencil={stencilHolder:{},define:function(a,c,b,e){var h=function(a,c,b){return{guid:stencil.util.guid(),tagID:a,template:b,childStencils:{},isStandard:!0,destination:c,existingContent:"",clear:function(){$(this.destination).empty().append(this.existingContent)},render:function(a,c,b){if(!(a instanceof Array))if(a instanceof Object)a=[a];else return stencil.util.log("Stencil: dataset in an invalid format"),!1;else if(null==a||0===a.length)return stencil.util.log("Stencil: no dataset passed in"),
!1;var e=function(a,c){var b;c.split(".").forEach(function(d,e){b=0===e?null==a[d]?stencil.util.log("Stencil: "+c+" not found"):a[d]:null==b[d]?stencil.util.log("Stencil: "+c+" not found"):b[d]});return b},d=this.destination,l=!1,f;null==b?(b=$(d),f=b.filter(":first").clone(),l=!0):f=b.find(d);var h=this.template,g=this.childStencils,m=this.isStandard;if(f.length)"append"===c?this.existingContent=f.html():("prepend"===c&&(this.existingContent=f.html()),f.empty());else return stencil.util.log("Stencil: Destination ID - "+
d+" not found!"),!1;a.forEach(function(a,c){a.lpIdx=c;a.ctIdx=c+1;for(var b=h;0<=b.search("{{.*}}");)var d=b.search("{{.*}}")+2,l=b.indexOf("}}",d),d=b.slice(d,l),l=e(a,d),l=null==l?"":l,b=b.replace("{{"+d+"}}",l);var k=f;m&&(d=stencil.util.createWrapper(f,"stencil-replicator","append"),k=f.find(d));k.append(b);Object.keys(g).forEach(function(b){g[b].render(a[b],null,k)});k.find("select[data-stencilselector]").each(function(){var b=this.getAttribute("data-stencilselector");stencil.util.selectOption($(this),
e(a,b))})});"prepend"===c&&f.append(this.existingContent);if(l){stencil.opts.debug||stencil.util.cleanUpStencils(f);if("none"===c)return b.replaceWith(f.clone().empty()),f;b.replaceWith(f);return!0}}}},g=function(a){var b=h(a.tagID,a.destination,a.template);Object.keys(a.childStencils).forEach(function(c){b.childStencils[c]=g(a.childStencils[c])});return b},d=$("#"+a);if(null!=stencil.stencilHolder[a])return a=stencil.stencilHolder[a],d=g(a),null==c&&(c=stencil.util.createWrapper($(a.destination),
null==e?stencil.opts.defaultOutputElement:e,"after")),d.destination=c,d;if(!d.length)return stencil.util.log("Stencil: Tag ID '"+a+"' provided is not found!"),null;var k={};stencil.util.log("Stencil: Searching for child stencils in "+a);0!==d.find("stencil").length&&(k=stencil.util.findStencils(d));stencil.util.log("Stencil: Completed child stencil generation for "+a+", "+Object.keys(k).length+" child stencil");null!=b&&b.forEach(function(a){stencil.util.log("Stencil: Building specified child stencil: "+
a);var b=$("#"+a);b.length||stencil.util.log("Stencil: Specified child stencil: "+a+" not found!");b.addClass(a);k[a]=h(a,"."+a,b.html());k[a].isStandard=!1;b.empty()});null==c&&(c=stencil.util.createWrapper(d,null==e?stencil.opts.defaultOutputElement:e,"after"));c=h(a,c,d.html());c.childStencils=k;d.remove();return stencil.stencilHolder[a]=c},build:function(a){a=null==a?$("body"):$("#"+a);return 0===a.length?(stencil.util.log("Stencil: Unable to start build process as starting element ID cannot be found"),
null):stencil.util.findStencils(a)},util:{guid:function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}(),selectOption:function(a,c){a.children().each(function(){this.value==c&&this.setAttribute("selected","")})},outerHTML:function(a){return a.clone().wrap("<p>").parent().html()},createWrapper:function(a,c,b){var e=stencil.util.guid(),h=document.createElement(c);h.className=""===h.className?
e:h.className+" "+e;a[b](h);return c+"."+e},findStencils:function(a){function c(a,b){for(var g=a.childNodes,d=0;d<g.length;d++)"STENCIL"!==g[d].nodeName?c(g[d],b):b[g[d].id]=stencil.define(g[d].id,null,null,"stencil-output")}var b={};c(a.get(0),b);return b},cleanUpStencils:function(a){function c(a){if(-1<a.nodeName.indexOf("STENCIL"))0===a.childNodes.length&&a.parentNode.removeChild(a),$(a).children().unwrap().each(function(){c(this)});else{a=a.childNodes;for(var e=0;e<a.length;e++)c(a[e])}}a.children().each(function(){c(this)})},
changeTag:function(a,c){a.each(function(a){var e=this.outerHTML.replace("/^<"+this.nodeName+"/","<"+c).replace("/</"+this.nodeName+">$/","</"+c+">");a.replaceWith(e)})},log:function(a){stencil.opts.debug&&console.log(a)}},opts:{debug:!1,defaultOutputElement:"stencil-output"}};