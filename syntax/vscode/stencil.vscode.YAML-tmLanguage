# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Stencil
scopeName: text.html.stencil
fileTypes: [stencil]
uuid: fa1eff84-3bcd-4468-ab7f-b3dd16e59843

patterns:
- include: '#template-variables-odd'

- include: '#stencil-tag-odd'

- include: '#stencil-tag-attributes'

- include: '#html_tags'

- include: 'text.html.basic'

repository:
  stencil-tag-odd:
    name: meta.function.tag.odd.stencil
    begin: (<)(stencil)
    beginCaptures:
      '1': {name: punctuation.definition.tag.html}
      '2': {name: support.class.tag.stencil}
      '3': {name: punctuation.definition.tag.html}
    end: (</)(stencil)(>)
    captures:
      '1': {name: punctuation.definition.tag.html}
      '2': {name: support.class.tag.stencil}
      '3': {name: punctuation.definition.tag.html}
    patterns:
    - include: '#tag_id_attribute'
    - include: '#stencil-tag-attributes'
    - include: '#tag-stuff'
    - include: '#stencil-tag-endcap-odd'
    - include: '#template-variables-odd'
    - include: '#stencil-tag-even'
    - include: '#html_tags'

  stencil-tag-even:
    name: meta.function.tag.even.stencil
    begin: (<)(stencil)
    beginCaptures:
      '1': {name: punctuation.definition.tag.html}
      '2': {name: constant.language.tag.stencil}
      '3': {name: punctuation.definition.tag.html}
    end: (</)(stencil)(>)
    captures:
      '1': {name: punctuation.definition.tag.html}
      '2': {name: constant.language.tag.stencil}
      '3': {name: punctuation.definition.tag.html}
    patterns:
    - include: '#tag_id_attribute'
    - include: '#stencil-tag-attributes'
    - include: '#tag-stuff'
    - include: '#stencil-tag-endcap-even'
    - include: '#template-variables-odd'
    - include: '#stencil-tag-odd'
    - include: '#html_tags'

  stencil-tag-endcap-odd:
    name: meta.function.tag.odd.start.endcap.stencil
    match: ([^>])?(>)
    captures:
      '2': {name: punctuation.definition.tag.html}
    patterns:
    - include: '#stencil-tag-attributes'

  stencil-tag-endcap-even:
    name: meta.function.tag.even.start.endcap.stencil
    match: ([^>])?(>)
    captures:
      '2': {name: punctuation.definition.tag.html}
    patterns:
    - include: '#stencil-tag-attributes'
  
  stencil-tag-attributes:
    name: meta.function.tag.attribute.stencil
    match: (data-stencil-[-a-zA-Z]+)(=)(["'])([-a-zA-Z0-9_\./ ]*)(['"])
    captures:
      '1': {name: support.variable.stencil}
      '2': {name: support.variable.stencil}
      '3': {name: punctuation.definition.string.begin.html}
      '4': {name: variable.parameter.attribute.stencil}
      '5': {name: punctuation.definition.string.begin.html}
  
  template-variables-odd:
    name: meta.function.variable.odd.stencil
    begin: (\{\{)
    beginCaptures:
      '1': {name: support.other.variable.start.stencil}
    end: (\}\})
    endCaptures:
      '1': {name: support.other.variable.end.stencil}
    patterns:
    - include: '#template-variables-even'
    - include: '#variable-name'
    - include: '#subselector-char'
    - include: '#variable-flag'

  template-variables-even:
    name: meta.function.variable.even.stencil
    begin: (\{\{)
    beginCaptures:
      '1': {name: constant.language.variable.start.stencil}
    end: (\}\})
    endCaptures:
      '1': {name: constant.language.variable.end.stencil}
    patterns:
    - include: '#template-variables-odd'
    - include: '#variable-name'
    - include: '#subselector-char'
    - include: '#variable-flag'
  
  variable-name:
    name: variable.parameter.template.stencil
    match: \w
  
  subselector-char:
    name: keyword.operator.subobject.stencil
    match: \.\[\]
  
  variable-flag:
    name: support.function.flag.stencil
    match: (/)([-a-zA-Z0-9]+)

  entities:
    patterns:
    - name: constant.character.entity.html
      match: (&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)
      captures:
        '1': {name: punctuation.definition.entity.html}
        '3': {name: punctuation.definition.entity.html}
    - name: invalid.illegal.bad-ampersand.html
      match: '&'

  escaped-double-quote:
    name: constant.character.escape.js
    match: \\"

  escaped-single-quote:
    name: constant.character.escape.js
    match: \\'

  html_tags:
    patterns:
    - name: meta.tag.any.html
      begin: (<)([a-zA-Z0-9:-]+)(?=[^>]*></\2>)
      beginCaptures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.html}
      end: (>(<)/)(\2)(>)
      endCaptures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: meta.scope.between-tag-pair.html}
        '3': {name: entity.name.tag.html}
        '4': {name: punctuation.definition.tag.html}
      patterns:
      - include: '#tag-stuff'
    - name: meta.tag.preprocessor.xml.html
      begin: (<\?)(xml)
      end: (\?>)
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.xml.html}
      patterns:
      - include: '#tag-generic-attribute'
      - include: '#string'
    - name: comment.block.html
      begin: <!--
      end: --\s*>
      captures:
        '0': {name: punctuation.definition.comment.html}
      patterns:
      - match: --
        name: invalid.illegal.bad-comments-or-CDATA.html
    - name: meta.tag.sgml.html
      begin: <!
      end: '>'
      captures:
        '0': {name: punctuation.definition.tag.html}
      patterns:
      - name: meta.tag.sgml.doctype.html
        begin: (DOCTYPE|doctype)
        end: (?=>)
        captures:
          '1': {name: entity.name.tag.doctype.html}
        patterns:
        - name: string.quoted.double.doctype.identifiers-and-DTDs.html
          match: '"[^">]*"'
      - name: constant.other.inline-data.html
        begin: \[CDATA\[
        end: ']](?=>)'
      - name: invalid.illegal.bad-comments-or-CDATA.html
        match: (\s*)(?!--|>)\S(\s*)
    - name: source.css.embedded.html
      begin: (?:^\s+)?(<)((?i:style))\b(?![^>]*/>)
      end: (</)((?i:style))(>)(?:\s*\n)?
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.style.html}
        '3': {name: punctuation.definition.tag.html}
      patterns:
      - include: '#tag-stuff'
      - begin: (>)
        beginCaptures:
          '1': {name: punctuation.definition.tag.html}
        end: (?=</(?i:style))
        patterns:
        - include: source.css
    - name: source.js.embedded.html
      begin: (?:^\s+)?(<)((?i:script))\b(?![^>]*/>)
      beginCaptures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.script.html}
      end: (?<=</(script|SCRIPT))(>)(?:\s*\n)?
      endCaptures:
        '2': {name: punctuation.definition.tag.html}
      patterns:
      - include: '#tag-stuff'
      - begin: (?<!</(?:script|SCRIPT))(>)
        end: (</)((?i:script))
        captures:
          '1': {name: punctuation.definition.tag.html}
          '2': {name: entity.name.tag.script.html}
        patterns:
        - name: comment.line.double-slash.js
          match: (//).*?((?=</script)|$\n?)
          captures:
            '1': {name: punctuation.definition.comment.js}
        - name: comment.block.js
          begin: /\*
          end: \*/|(?=</script)
          captures:
            '0': {name: punctuation.definition.comment.js}
        - include: source.js
    - name: meta.tag.structure.any.html
      begin: (</?)((?i:body|head|html)\b)
      end: (>)
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.structure.any.html}
      patterns:
      - include: '#tag-stuff'
    - name: meta.tag.block.any.html
      begin: (</?)((?i:address|blockquote|dd|div|header|section|footer|aside|nav|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)
      end: (>)
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.block.any.html}
      patterns:
      - include: '#tag-stuff'
    - name: meta.tag.inline.any.html
      begin: (</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)
      end: '((?: ?/)?>)'
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.inline.any.html}
      patterns:
      - include: '#tag-stuff'
    - name: meta.tag.other.html
      begin: (</?)([a-zA-Z0-9:-]+)
      end: (>)
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.other.html}
      patterns:
      - include: '#tag-stuff'
    - name: meta.tag.tokenised.html
      begin: (</?)([a-zA-Z0-9{}:-]+)
      end: (>)
      captures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.tokenised.html}
      patterns:
      - include: '#tag-stuff'
    - include: '#entities'
    - name: invalid.illegal.incomplete.html
      match: <>
    - name: invalid.illegal.bad-angle-bracket.html
      match: <

  string:
    patterns:
    - include: '#string-single-quoted'
    - include: '#string-double-quoted'

  string-double-quoted:
    name: string.quoted.double.stencil
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#escaped-double-quote'
    - include: '#template-variables-odd'

  string-single-quoted:
    name: string.quoted.single.stencil
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#escaped-single-quote'
    - include: '#template-variables-odd'

  tag-stuff:
    patterns:
    - include: '#stencil-tag-attributes'
    - include: '#tag_id_attribute'
    - include: '#tag_generic_attribute'
    - include: '#string'
    - include: '#template-variables-odd'

  tag_generic_attribute:
    name: entity.other.attribute-name.html
    begin: \b([a-zA-Z0-9_-]+)\b\s*(=)
    end: (?<='|"|)
    captures:
      '1': {name: entity.other.attribute-name.generic.html}
      '2': {name: entity.other.attribute-name.generic.html}
    patterns:
    - include: '#string'

  tag_id_attribute:
    name: meta.attribute-with-value.id.html
    begin: \b(id)\b\s*(=)
    end: (?<='|"|)
    captures:
      '1': {name: entity.other.attribute-name.id.html}
      '2': {name: entity.other.attribute-name.id.html}
    patterns:
    - include: '#string'